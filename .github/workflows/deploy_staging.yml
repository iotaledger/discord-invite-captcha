name: Deploy Staging

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Build-specific env vars
      CONFIG_ID: staging
      VERCEL_DOMAIN: ${{ secrets.VERCEL_CLIENT_STAGING_DOMAIN }}

      # Global Vercel env vars
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_CLIENT_PROJECT_ID }}
      VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_CLIENT_PROJECT_NAME }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install npm@latest
        run: npm install -g npm

      - name: Install latest Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (staging)
        run: |
          TS="$(date +%s)"
          DEPLOY_URL=$(npx vercel --token "${{ secrets.VERCEL_TOKEN }}" \
            --scope "${{ secrets.VERCEL_SCOPE }}" \
            --env CONFIG_ID=$CONFIG_ID \
            --env SITE_KEY="${{ secrets.SITE_KEY }}" \
            --env SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            --env DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" \
            --env CHANNEL_ID="${{ secrets.CHANNEL_ID }}" \
            --meta githubCommitSha="${{ github.sha }}" \
            --meta timestamp=$TS \
            --yes)

          echo "Deployed to $DEPLOY_URL"

          npx vercel alias --token "${{ secrets.VERCEL_TOKEN }}" \
            --scope "${{ secrets.VERCEL_SCOPE }}" \
            "$DEPLOY_URL" "$VERCEL_DOMAIN"
